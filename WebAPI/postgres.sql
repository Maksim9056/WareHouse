CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
CREATE TABLE "Condition" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name_Condition" text NOT NULL,
    CONSTRAINT "PK_Condition" PRIMARY KEY ("Id")
);

CREATE TABLE "Receipt_document" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number_document" text NOT NULL,
    "Date" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Receipt_document" PRIMARY KEY ("Id")
);

CREATE TABLE "Client" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "Address" text NOT NULL,
    "conditionId" integer NOT NULL,
    CONSTRAINT "PK_Client" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Client_Condition_conditionId" FOREIGN KEY ("conditionId") REFERENCES "Condition" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Resource" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "conditionId" integer NOT NULL,
    CONSTRAINT "PK_Resource" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Resource_Condition_conditionId" FOREIGN KEY ("conditionId") REFERENCES "Condition" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Unit_of_measurement" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "conditionId" integer NOT NULL,
    CONSTRAINT "PK_Unit_of_measurement" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Unit_of_measurement_Condition_conditionId" FOREIGN KEY ("conditionId") REFERENCES "Condition" ("Id") ON DELETE CASCADE
);

CREATE TABLE "The_shipment_document" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number_document" text NOT NULL,
    "Client_IdId" integer NOT NULL,
    "DateTime" timestamp with time zone NOT NULL,
    "conditionId" integer NOT NULL,
    CONSTRAINT "PK_The_shipment_document" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_The_shipment_document_Client_Client_IdId" FOREIGN KEY ("Client_IdId") REFERENCES "Client" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_The_shipment_document_Condition_conditionId" FOREIGN KEY ("conditionId") REFERENCES "Condition" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Admission_resource" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Receipt_document_IdId" integer NOT NULL,
    "Resource_IdId" integer NOT NULL,
    "Unit_of_measurement_IdId" integer NOT NULL,
    "Count" integer NOT NULL,
    CONSTRAINT "PK_Admission_resource" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Admission_resource_Receipt_document_Receipt_document_IdId" FOREIGN KEY ("Receipt_document_IdId") REFERENCES "Receipt_document" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Admission_resource_Resource_Resource_IdId" FOREIGN KEY ("Resource_IdId") REFERENCES "Resource" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Admission_resource_Unit_of_measurement_Unit_of_measurement_~" FOREIGN KEY ("Unit_of_measurement_IdId") REFERENCES "Unit_of_measurement" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Balance" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Resource_IdId" integer NOT NULL,
    "Unit_of_measurement_IdId" integer NOT NULL,
    "Count" integer NOT NULL,
    CONSTRAINT "PK_Balance" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Balance_Resource_Resource_IdId" FOREIGN KEY ("Resource_IdId") REFERENCES "Resource" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Balance_Unit_of_measurement_Unit_of_measurement_IdId" FOREIGN KEY ("Unit_of_measurement_IdId") REFERENCES "Unit_of_measurement" ("Id") ON DELETE CASCADE
);

CREATE INDEX "IX_Admission_resource_Receipt_document_IdId" ON "Admission_resource" ("Receipt_document_IdId");

CREATE INDEX "IX_Admission_resource_Resource_IdId" ON "Admission_resource" ("Resource_IdId");

CREATE INDEX "IX_Admission_resource_Unit_of_measurement_IdId" ON "Admission_resource" ("Unit_of_measurement_IdId");

CREATE INDEX "IX_Balance_Resource_IdId" ON "Balance" ("Resource_IdId");

CREATE INDEX "IX_Balance_Unit_of_measurement_IdId" ON "Balance" ("Unit_of_measurement_IdId");

CREATE INDEX "IX_Client_conditionId" ON "Client" ("conditionId");

CREATE INDEX "IX_Resource_conditionId" ON "Resource" ("conditionId");

CREATE INDEX "IX_The_shipment_document_Client_IdId" ON "The_shipment_document" ("Client_IdId");

CREATE INDEX "IX_The_shipment_document_conditionId" ON "The_shipment_document" ("conditionId");

CREATE INDEX "IX_Unit_of_measurement_conditionId" ON "Unit_of_measurement" ("conditionId");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250805115941_InitialCreate', '9.0.8');

INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (1, 'Подписан');
INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (2, 'Отозван');
INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (3, 'Не подписан');
INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (4, 'В наличии');
INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (5, 'Закончился');
INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (6, 'Закупка');
INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (7, 'Активный');
INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (8, 'Новый');
INSERT INTO "Condition" ("Id", "Name_Condition")
VALUES (9, 'Готов');

SELECT setval(
    pg_get_serial_sequence('"Condition"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Condition") + 1,
        nextval(pg_get_serial_sequence('"Condition"', 'Id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250805121921_InitialCreate1', '9.0.8');

COMMIT;

