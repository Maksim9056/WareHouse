@page "/Unit/Edit/{Id:int}"
@using BlazorApp.Client.Pages.Component
@rendermode InteractiveWebAssembly
@using ClassLibrary.Models
@inject NavigationManager NavManager
@inject HttpClient HttpClient
<h3>  Единицы измерения</h3>
@if (error != "")
{
 <div class="alert alert-danger mb-3">@error</div>
}
<AutoRefEdit TRef="Unit"
             Id="Id"
             ApiPath="Unit"
             ReferenceDictionaries="refDicts"
             FormName="unit-edit"
             OnSaved="AfterSave">
    <ExtraButtons>
        <button class="btn btn-warning" @onclick="Archive">К архиву</button>
    </ExtraButtons>
</AutoRefEdit>


@code {
    [Parameter]
    public int Id { get; set; }
    Unit Unit;
    Dictionary<Type, IEnumerable<BaseRef>> refDicts = new();
    public string error = "";

    Task AfterSave(Unit r)
    {
        NavManager.NavigateTo("Unit");
        return Task.CompletedTask;
    }

    async Task Archive()
    {
        NavManager.NavigateTo("/Unit");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = await HttpClient.GetFromJsonAsync<Unit>($"Unit/{Id}");
            Unit = client;
            var clients = await HttpClient.GetFromJsonAsync<IEnumerable<Condition>>("Conditions");
            refDicts[typeof(Condition)] = clients!;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

    }
}
