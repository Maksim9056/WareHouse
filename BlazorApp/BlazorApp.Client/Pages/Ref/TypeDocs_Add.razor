@page "/TypeDocs/add"
@using ClassLibrary.Models
@rendermode InteractiveWebAssembly
@inject NavigationManager NavManager
@inject HttpClient HttpClient

<h3>Тип документа</h3>

<div class="mb-3">
    <button class="btn btn-success me-2" @onclick="() => Save()">Сохранить</button>
</div>
<label>Название</label>

@if (typedocs != null)
{
    <input @bind="typedocs.Name" />

}




@code {
    TypeDoc typedocs = new TypeDoc();

    private async Task Save()
    {
        try
        {



            var clien = await HttpClient.PostAsJsonAsync($"TypeDocs", typedocs);


            // await clien.Content.ReadFromJsonAsync<TypeDoc>();


            // TODO: заменить на реальную логику (навигация, открытие модалки и т.п.)
            NavManager.NavigateTo("/TypeDocs");
        }
        catch (Exception e)
        {

        }
    }

    private void OnArchive()
    {
        // TODO: заменить на реальную логику
        // NavManager.NavigateTo("/Clients/Archive");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // // https://localhost:7166/api/
            // var client = await HttpClient.GetFromJsonAsync<TypeDoc>($"TypeDocs/{Id}");
            // typedocs = client;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

    }
}
