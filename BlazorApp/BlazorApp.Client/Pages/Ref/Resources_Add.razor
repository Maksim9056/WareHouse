@page "/Resource/add"
@using BlazorApp.Client.Pages.Component
@using ClassLibrary.Models
@rendermode InteractiveWebAssembly
@inject NavigationManager NavManager
@inject HttpClient HttpClient
<h3>Создать ресурс</h3>
@if (conditions == null)
{
    <p>Загрузка...</p>
}
else
{
    @if (error != "")
    {
        <div class="alert alert-danger mb-3">@error</div>
    }
    <AutoRefForm TRef="Resource"
                 Model="resource"
                 ReferenceDictionaries="refDicts"
                 OnValidSubmit="Save" />
}



@code {
    Resource resource = new Resource();
    IEnumerable<Condition> condition ;
    Condition conditions = new Condition();
    Dictionary<Type, IEnumerable<BaseRef>> refDicts;
    public string error = "";

    private async Task Save()
    {
        try
        {
            if (conditions != null)
            {


                if (resource == null || resource.condition == null || resource.Code == null || resource.Name == null)
                {
                    error = "Не заполнено полностью";
                }
                else
                {
                    var clien = await HttpClient.PostAsJsonAsync($"Resources", resource);

                    if (clien.IsSuccessStatusCode)
                    {
                        NavManager.NavigateTo("/Resource");
                    }
                    else
                    {
                        var cd = await clien.Content.ReadAsStringAsync();
                        error = cd;
                    }
                }
            }

        }
        catch (Exception e)
        {

        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {   
            var client = await HttpClient.GetFromJsonAsync<IEnumerable<Condition>>("Conditions");
            condition = client;

            refDicts = new Dictionary<Type, IEnumerable<BaseRef>>
            {
                [typeof(Condition)] = condition
            };
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

    }
}
