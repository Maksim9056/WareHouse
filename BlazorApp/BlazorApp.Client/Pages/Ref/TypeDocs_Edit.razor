@page "/TypeDocs/Details/{Id:int}"
@using BlazorApp.Client.Pages.Component
@using ClassLibrary.Models
@rendermode InteractiveWebAssembly
@inject NavigationManager NavManager
@inject HttpClient HttpClient

<AutoRefEdit TRef="TypeDoc"
             Id="Id"
             ApiPath="TypeDocs"
             ReferenceDictionaries="refDicts"
             FormName="typedocs-edit"
             OnSaved="AfterSave">
    <ExtraButtons>
        <button class="btn btn-warning" @onclick="Archive">К архиву</button>
    </ExtraButtons>
</AutoRefEdit>


@code {
    [Parameter]

    public int Id { get; set; }
    TypeDoc typedocs;
    Dictionary<Type, IEnumerable<BaseRef>> refDicts = new();

    Task AfterSave(TypeDoc r)
    {
        NavManager.NavigateTo("TypeDocs");
        return Task.CompletedTask;
    }

    async Task Archive()
    {

        NavManager.NavigateTo("/TypeDocs");
    }
    private async Task Save()
    {
        try
        {



            var clien = await HttpClient.PutAsJsonAsync($"TypeDocs/{Id}", typedocs);

            NavManager.NavigateTo("/TypeDocs");
        }
        catch(Exception e)
        {
            
        }
    }

    private async Task OnArchive()
    {
        NavManager.NavigateTo("/TypeDocs");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // https://localhost:7166/api/
            var client = await HttpClient.GetFromJsonAsync<TypeDoc>($"TypeDocs/{Id}");
            typedocs = client;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

    }
}
